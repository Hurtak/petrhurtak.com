
					replacements: [
						{
							// convert REM units to PX values
							pattern: /([0-9]*\.?[0-9]+)rem/ig,
							replacement: (match, p1) => (parseFloat(p1)*10 + 'px')
						}, {
							// replace media queries to "@media all" (applies desktop responsive)
							pattern: /@media ([a-zA-Z0-9()-: ]+){/ig,
							replacement: '@media all {'
						}
					]

Z <https://gitlab.kancelar.seznam.cz/fulltext-frontend/searchweb/blob/redesign/responsive/Gruntfile.js>



	- We did big redesign of web page and decided to drop support for IE8
	- We styled mobile first & used rem instead of px in most of the places
	- Later on we decided it would be nice to add some ie8 support and the website obviously looked terrible because all sizes were in unsupported rem & desktop styles were in media queries which IE8 does not support
	- To add ie8 support we used these 2 tricks
		○ For rem to px we just took the css and regex replaced rems with px
			§ // convert REM units to PX values
pattern: /([0-9]*\.?[0-9]+)rem/ig,
replacement: (match, p1) => (parseFloat(p1)*10 + 'px')
			§ Usually 1em = 16px but we have font-size: 62.5 so 1rem = 10px
		○ For media queries>
			§ IE8 supports media query screen and media query print
			§ So what we can do is to just replace all media queries with media screen
			§ And since we are styling mobile first where media queries are sorted from smalles to biggest, then the biggest styles which are meant for desktop are then used because they are last
	- Then we just have ie8 conditional comment which adds ie8 specific <link> tag with styles and little bit of javascript which removes old styles

