Proč používat cnd a co to je
Css cdn fallback
Js cdn fallback



ServiceWorker to třeba řeší úplně krásně - ten umí držet i cache předchozí verze, když není dostupná aktuální.
Jinak to jde snadno přes timeout, onerror, onload. Záleží pak na konkrétní implementaci.
Ona je teda nedostupnost CDN spíš teoretické. U seriózních služeb to víceméně nemůže nastati už z principu, jak celé CDN funguje.

Z <http://disqus.com/embed/comments/?base=default&version=5e251367ffb39af07c2a292e9e45a454&f=jecas&t_u=http%3A%2F%2Fjecas.cz%2Fcdn&t_d=K%20%C4%8Demu%20slou%C5%BE%C3%AD%20CDN%3F&t_t=K%20%C4%8Demu%20slou%C5%BE%C3%AD%20CDN%3F&s_o=default>



Dobrej komentář ohledně nevýhod cdn

- Delay for DNS resolution and the new TCP connection could be non-trivial (some tests show 300ms+).
- A JS CDN is also likely tracking your traffic and you may not want them to.
- No offline dev environment (on the plane).
- Server run (phantom etc.) tests might run super slow if they have to pull in a remote js library.
- Probably issues when it comes to apps that are meant to work offline, although I think this is solved with service workers proxying the CDN request.

Z <https://news.ycombinator.com/item?id=11017587>





http://jecas.cz/cdn
