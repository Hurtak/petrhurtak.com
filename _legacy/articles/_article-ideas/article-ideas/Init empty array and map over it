Init empty array and map over it


new Array(10).fill('x')

	This does not work as expected for Objects. E.g. Array(3).fill([]); will store the same array in each index.

	From <http://disqus.com/embed/comments/?base=default&version=535b1faff5d641b82126e27ee837ea19&f=2ality&t_u=http%3A%2F%2Fwww.2ality.com%2F2013%2F11%2Finitializing-arrays.html&t_d=Initializing%20an%20array%20with%20values&t_t=Initializing%20an%20array%20with%20values&s_o=default>


[...Array(10)].fill('x')

Array.from(new Array(10)).fill('x')




Další obskurdní metody

Array.apply(null, Array(10)).map(x => 'x')
Array(10).join().split(',').map(x => 'x')






• Array(5) gives you an array with length 5 but no values, hence you can't interate over it.
• Array.apply(null, Array(5)).map(function () {}) gives you an array with length 5 and undefined as values, now it can be iterated over.

From <http://stackoverflow.com/questions/4852017/proper-way-to-initialize-an-arrays-length-in-javascript>


